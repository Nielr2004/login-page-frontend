{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neel\\\\Desktop\\\\login page 1\\\\my-app\\\\client\\\\src\\\\components\\\\ForgotPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OtpVerification = () => {\n  _s();\n  const [email, setEmail] = useState(''); // State for email\n  const [otp, setOtp] = useState(''); // State for OTP\n  const [newPassword, setNewPassword] = useState(''); // State for new password\n  const [confirmPassword, setConfirmPassword] = useState(''); // State for confirm password\n  const [error, setError] = useState(''); // State for error message\n  const [loading, setLoading] = useState(false); // To handle loading state\n\n  const handleVerifyOtp = async e => {\n    e.preventDefault();\n    setLoading(true); // Show loading indicator\n    setError(''); // Clear previous errors\n\n    // Check if new password and confirm password match\n    if (newPassword !== confirmPassword) {\n      setError('New password and confirm password do not match.');\n      setLoading(false);\n      return;\n    }\n    try {\n      // Send request to verify OTP and reset password\n      const response = await axios.post('http://localhost:5000/api/auth/verify-otp', {\n        email,\n        otp,\n        newPassword\n      });\n      alert('Password reset successful! You can now log in with your new password.');\n      setLoading(false); // Hide loading after successful password reset\n    } catch (error) {\n      setLoading(false); // Hide loading after error\n      if (error.response) {\n        setError(error.response.data.message); // Show error message from server\n      } else {\n        setError('Error connecting to the server. Please try again later.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reset Your Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleVerifyOtp,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          placeholder: \"Enter your email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: otp,\n          onChange: e => setOtp(e.target.value),\n          placeholder: \"Enter your OTP\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value),\n          placeholder: \"New Password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          placeholder: \"Confirm Password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 27\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? 'Verifying OTP...' : 'Reset Password'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(OtpVerification, \"OdosKQhNW/lx2iZZfqY02IGtQS4=\");\n_c = OtpVerification;\nexport default OtpVerification;\nvar _c;\n$RefreshReg$(_c, \"OtpVerification\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","OtpVerification","_s","email","setEmail","otp","setOtp","newPassword","setNewPassword","confirmPassword","setConfirmPassword","error","setError","loading","setLoading","handleVerifyOtp","e","preventDefault","response","post","alert","data","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","style","color","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Neel/Desktop/login page 1/my-app/client/src/components/ForgotPassword.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst OtpVerification = () => {\r\n    const [email, setEmail] = useState(''); // State for email\r\n    const [otp, setOtp] = useState(''); // State for OTP\r\n    const [newPassword, setNewPassword] = useState(''); // State for new password\r\n    const [confirmPassword, setConfirmPassword] = useState(''); // State for confirm password\r\n    const [error, setError] = useState(''); // State for error message\r\n    const [loading, setLoading] = useState(false); // To handle loading state\r\n\r\n    const handleVerifyOtp = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true); // Show loading indicator\r\n        setError(''); // Clear previous errors\r\n\r\n        // Check if new password and confirm password match\r\n        if (newPassword !== confirmPassword) {\r\n            setError('New password and confirm password do not match.');\r\n            setLoading(false);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // Send request to verify OTP and reset password\r\n            const response = await axios.post('http://localhost:5000/api/auth/verify-otp', { email, otp, newPassword });\r\n            alert('Password reset successful! You can now log in with your new password.');\r\n            setLoading(false); // Hide loading after successful password reset\r\n        } catch (error) {\r\n            setLoading(false); // Hide loading after error\r\n            if (error.response) {\r\n                setError(error.response.data.message); // Show error message from server\r\n            } else {\r\n                setError('Error connecting to the server. Please try again later.');\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2>Reset Your Password</h2>\r\n            <form onSubmit={handleVerifyOtp}>\r\n                <div>\r\n                    <input\r\n                        type=\"email\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        placeholder=\"Enter your email\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={otp}\r\n                        onChange={(e) => setOtp(e.target.value)}\r\n                        placeholder=\"Enter your OTP\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <input\r\n                        type=\"password\"\r\n                        value={newPassword}\r\n                        onChange={(e) => setNewPassword(e.target.value)}\r\n                        placeholder=\"New Password\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <input\r\n                        type=\"password\"\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        placeholder=\"Confirm Password\"\r\n                        required\r\n                    />\r\n                </div>\r\n                {error && <p style={{ color: 'red' }}>{error}</p>} {/* Display error message */}\r\n                <button type=\"submit\" disabled={loading}>\r\n                    {loading ? 'Verifying OTP...' : 'Reset Password'}\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OtpVerification;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAACQ,GAAG,EAAEC,MAAM,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACpC,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACpD,MAAM,CAACY,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5D,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAE/C,MAAMkB,eAAe,GAAG,MAAOC,CAAC,IAAK;IACjCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBH,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;IAClBF,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;IAEd;IACA,IAAIL,WAAW,KAAKE,eAAe,EAAE;MACjCG,QAAQ,CAAC,iDAAiD,CAAC;MAC3DE,UAAU,CAAC,KAAK,CAAC;MACjB;IACJ;IAEA,IAAI;MACA;MACA,MAAMI,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,IAAI,CAAC,2CAA2C,EAAE;QAAEhB,KAAK;QAAEE,GAAG;QAAEE;MAAY,CAAC,CAAC;MAC3Ga,KAAK,CAAC,uEAAuE,CAAC;MAC9EN,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,OAAOH,KAAK,EAAE;MACZG,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;MACnB,IAAIH,KAAK,CAACO,QAAQ,EAAE;QAChBN,QAAQ,CAACD,KAAK,CAACO,QAAQ,CAACG,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC;MAC3C,CAAC,MAAM;QACHV,QAAQ,CAAC,yDAAyD,CAAC;MACvE;IACJ;EACJ,CAAC;EAED,oBACIZ,OAAA;IAAKuB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBxB,OAAA;MAAAwB,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5B5B,OAAA;MAAM6B,QAAQ,EAAEd,eAAgB;MAAAS,QAAA,gBAC5BxB,OAAA;QAAAwB,QAAA,eACIxB,OAAA;UACI8B,IAAI,EAAC,OAAO;UACZC,KAAK,EAAE5B,KAAM;UACb6B,QAAQ,EAAGhB,CAAC,IAAKZ,QAAQ,CAACY,CAAC,CAACiB,MAAM,CAACF,KAAK,CAAE;UAC1CG,WAAW,EAAC,kBAAkB;UAC9BC,QAAQ;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACN5B,OAAA;QAAAwB,QAAA,eACIxB,OAAA;UACI8B,IAAI,EAAC,MAAM;UACXC,KAAK,EAAE1B,GAAI;UACX2B,QAAQ,EAAGhB,CAAC,IAAKV,MAAM,CAACU,CAAC,CAACiB,MAAM,CAACF,KAAK,CAAE;UACxCG,WAAW,EAAC,gBAAgB;UAC5BC,QAAQ;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACN5B,OAAA;QAAAwB,QAAA,eACIxB,OAAA;UACI8B,IAAI,EAAC,UAAU;UACfC,KAAK,EAAExB,WAAY;UACnByB,QAAQ,EAAGhB,CAAC,IAAKR,cAAc,CAACQ,CAAC,CAACiB,MAAM,CAACF,KAAK,CAAE;UAChDG,WAAW,EAAC,cAAc;UAC1BC,QAAQ;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACN5B,OAAA;QAAAwB,QAAA,eACIxB,OAAA;UACI8B,IAAI,EAAC,UAAU;UACfC,KAAK,EAAEtB,eAAgB;UACvBuB,QAAQ,EAAGhB,CAAC,IAAKN,kBAAkB,CAACM,CAAC,CAACiB,MAAM,CAACF,KAAK,CAAE;UACpDG,WAAW,EAAC,kBAAkB;UAC9BC,QAAQ;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,EACLjB,KAAK,iBAAIX,OAAA;QAAGoC,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAM,CAAE;QAAAb,QAAA,EAAEb;MAAK;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAAC,GAAC,eACnD5B,OAAA;QAAQ8B,IAAI,EAAC,QAAQ;QAACQ,QAAQ,EAAEzB,OAAQ;QAAAW,QAAA,EACnCX,OAAO,GAAG,kBAAkB,GAAG;MAAgB;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAAC1B,EAAA,CAlFID,eAAe;AAAAsC,EAAA,GAAftC,eAAe;AAoFrB,eAAeA,eAAe;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}